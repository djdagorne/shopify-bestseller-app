{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/react-in-jsx-scope */\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ProductList() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  });\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log(data);\n  return __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Product',\n      plural: 'Products'\n    },\n    items: data.nodes,\n    renderItem: item => {\n      const media = __jsx(Thumbnail, {\n        source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n        alt: item.images.edges[0] ? item.images.edges[0].altText : ''\n      });\n\n      const {\n        price\n      } = item.variants.edges[0].node;\n      return __jsx(ResourceList.Item, {\n        id: item.id,\n        media: media,\n        accessibilityLabel: `View details for ${item.title}`\n      }, __jsx(Stack, null, __jsx(Stack.Item, {\n        fill: true\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price))));\n    }\n  }));\n}\n\nexport default ProductList;","map":{"version":3,"sources":["Z:/Documents/Projects/sample-shopify-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","loading","error","data","variables","ids","get","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;;AAAA;AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SACEC,IADF,EACQC,YADR,EACsBC,KADtB,EAC6BC,SAD7B,EACwCC,SADxC,QAEO,kBAFP;AAGA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,kBAAkB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA6BA,SAASS,WAAT,GAAuB;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACO,kBAAD,EAAqB;AAAEK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEP,KAAK,CAACQ,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAAzC;AAEA,MAAIL,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACK,OAAZ,CAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,SACE,MAAC,IAAD,QACE,MAAC,YAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,YAAY,EAAE;AAAEO,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAFhB;AAGE,IAAA,KAAK,EAAER,IAAI,CAACS,KAHd;AAIE,IAAA,UAAU,EAAGC,IAAD,IAAU;AACpB,YAAMC,KAAK,GACT,MAAC,SAAD;AACE,QAAA,MAAM,EACJD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAAjD,GAA+D,EAFnE;AAIE,QAAA,GAAG,EACDL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBG,OAA5C,GAAsD;AAL1D,QADF;;AAUA,YAAM;AAAEC,QAAAA;AAAF,UAAYP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAzC;AACA,aACE,MAAC,YAAD,CAAc,IAAd;AACE,QAAA,EAAE,EAAEJ,IAAI,CAACS,EADX;AAEE,QAAA,KAAK,EAAER,KAFT;AAGE,QAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACU,KAAM;AAHrD,SAKE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI;AAAhB,SACE,kBACE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACGV,IAAI,CAACU,KADR,CADF,CADF,CADF,EAQE,MAAC,KAAD,CAAO,IAAP,QACE,sBAEGH,KAFH,CADF,CARF,CALF,CADF;AAuBD;AAvCH,IADF,CADF;AA6CD;;AAED,eAAepB,WAAf","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {\r\n  Card, ResourceList, Stack, TextStyle, Thumbnail,\r\n} from '@shopify/polaris';\r\nimport store from 'store-js';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        descriptionHtml\r\n        id\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ProductList() {\r\n  const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } });\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error.message}</div>;\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <Card>\r\n      <ResourceList\r\n        showHeader\r\n        resourceName={{ singular: 'Product', plural: 'Products' }}\r\n        items={data.nodes}\r\n        renderItem={(item) => {\r\n          const media = (\r\n            <Thumbnail\r\n              source={\r\n                item.images.edges[0] ? item.images.edges[0].node.originalSrc : ''\r\n              }\r\n              alt={\r\n                item.images.edges[0] ? item.images.edges[0].altText : ''\r\n              }\r\n            />\r\n          );\r\n          const { price } = item.variants.edges[0].node;\r\n          return (\r\n            <ResourceList.Item\r\n              id={item.id}\r\n              media={media}\r\n              accessibilityLabel={`View details for ${item.title}`}\r\n            >\r\n              <Stack>\r\n                <Stack.Item fill>\r\n                  <h3>\r\n                    <TextStyle variation=\"strong\">\r\n                      {item.title}\r\n                    </TextStyle>\r\n                  </h3>\r\n                </Stack.Item>\r\n                <Stack.Item>\r\n                  <p>\r\n                    $\r\n                    {price}\r\n                  </p>\r\n                </Stack.Item>\r\n              </Stack>\r\n            </ResourceList.Item>\r\n          );\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"]},"metadata":{},"sourceType":"module"}