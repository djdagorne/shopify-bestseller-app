{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation scriptTagDelete($id: ID!) {\\n    scriptTagDelete(id: $id) {\\n      deletedScriptTagId\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    scriptTags(first: 5) {\\n      edges {\\n        node {\\n          id\\n          src\\n          displayScope\\n        }\\n      }\\n    }\\n  }  \\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation scriptTagCreate($input: ScriptTagInput!) {\\n    scriptTagCreate(input: $input) {\\n      scriptTag {\\n        id\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* eslint-disable react/react-in-jsx-scope */\n\n/* eslint-disable react/jsx-filename-extension */\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar QUERY_SCRIPT_TAGS = gql(_templateObject2());\nvar DELETE_SCRIPT_TAG = gql(_templateObject3());\n\nfunction ScriptPage() {\n  _s();\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScripts = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPT_TAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScripts = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPT_TAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, {\n    primary: true\n  }, __jsx(Card, {\n    title: \"These are current script tags: \",\n    sectioned: true\n  }, __jsx(\"p\", null, \" Create or Delete A Script Tag\"))), __jsx(Layout.Section, {\n    secondary: true\n  }, __jsx(Card, {\n    title: \"Delete Tag \",\n    sectioned: true\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: function onClick() {\n      createScripts({\n        variables: {\n          input: {\n            src: 'https://adf7e9d013ed.ngrok.io/test-script.js',\n            displayScope: 'ALL'\n          }\n        },\n        refetchQueries: [{\n          query: QUERY_SCRIPT_TAGS\n        }]\n      });\n    }\n  }, \"Create Script Tag\"))), __jsx(Layout.Section, null, __jsx(Card, null, __jsx(ResourceList, null, \"test\")))));\n}\n\n_s(ScriptPage, \"oFMv2X7K+OIhMiy0V8t2RQEah2A=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = ScriptPage;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["Z:/Documents/Projects/sample-shopify-app/pages/script-page.js"],"names":["gql","useQuery","useMutation","Button","Card","Layout","Page","ResourceList","Stack","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAGS","DELETE_SCRIPT_TAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message","variables","input","src","displayScope","refetchQueries","query"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SACEC,MADF,EACUC,IADV,EACgBC,MADhB,EACwBC,IADxB,EAC8BC,YAD9B,EAC4CC,KAD5C,QAEO,kBAFP;AAIA,IAAMC,iBAAiB,GAAGT,GAAH,mBAAvB;AAcA,IAAMU,iBAAiB,GAAGV,GAAH,oBAAvB;AAcA,IAAMW,iBAAiB,GAAGX,GAAH,oBAAvB;;AAYA,SAASY,UAAT,GAAsB;AAAA;;AAAA,qBACIV,WAAW,CAACO,iBAAD,CADf;AAAA;AAAA,MACbI,aADa;;AAAA,sBAEIX,WAAW,CAACS,iBAAD,CAFf;AAAA;AAAA,MAEbG,aAFa;;AAAA,kBAGab,QAAQ,CAACS,iBAAD,CAHrB;AAAA,MAGZK,OAHY,aAGZA,OAHY;AAAA,MAGHC,KAHG,aAGHA,KAHG;AAAA,MAGIC,IAHJ,aAGIA,IAHJ;;AAKpB,MAAIF,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEX,SACE,MAAC,IAAD,QACE,MAAC,MAAD,QACE,MAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,OAAO;AAAvB,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,iCAAZ;AAA8C,IAAA,SAAS;AAAvD,KACE,kDADF,CADF,CADF,EAME,MAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,SAAS;AAAzB,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,aAAZ;AAA0B,IAAA,SAAS;AAAnC,KACE,MAAC,MAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAE,mBAAM;AACbL,MAAAA,aAAa,CAAC;AACZM,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE;AACLC,YAAAA,GAAG,EAAE,8CADA;AAELC,YAAAA,YAAY,EAAE;AAFT;AADE,SADC;AAOZC,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEd;AAAT,SAAD;AAPJ,OAAD,CAAb;AASD;AAdH,yBADF,CADF,CANF,EA4BE,MAAC,MAAD,CAAQ,OAAR,QACE,MAAC,IAAD,QACE,MAAC,YAAD,eADF,CADF,CA5BF,CADF,CADF;AAwCD;;GAhDQE,U;UACiBV,W,EACAA,W,EACSD,Q;;;KAH1BW,U;AAkDT,eAAeA,UAAf","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  Button, Card, Layout, Page, ResourceList, Stack,\r\n} from '@shopify/polaris';\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst QUERY_SCRIPT_TAGS = gql`\r\n  query {\r\n    scriptTags(first: 5) {\r\n      edges {\r\n        node {\r\n          id\r\n          src\r\n          displayScope\r\n        }\r\n      }\r\n    }\r\n  }  \r\n`;\r\n\r\nconst DELETE_SCRIPT_TAG = gql`\r\n  mutation scriptTagDelete($id: ID!) {\r\n    scriptTagDelete(id: $id) {\r\n      deletedScriptTagId\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ScriptPage() {\r\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\r\n  const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\r\n  const { loading, error, data } = useQuery(QUERY_SCRIPT_TAGS);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error.message}</div>;\r\n\r\n  return (\r\n    <Page>\r\n      <Layout>\r\n        <Layout.Section primary>\r\n          <Card title=\"These are current script tags: \" sectioned>\r\n            <p> Create or Delete A Script Tag</p>\r\n          </Card>\r\n        </Layout.Section>\r\n        <Layout.Section secondary>\r\n          <Card title=\"Delete Tag \" sectioned>\r\n            <Button\r\n              primary\r\n              size=\"slim\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                createScripts({\r\n                  variables: {\r\n                    input: {\r\n                      src: 'https://adf7e9d013ed.ngrok.io/test-script.js',\r\n                      displayScope: 'ALL',\r\n                    },\r\n                  },\r\n                  refetchQueries: [{ query: QUERY_SCRIPT_TAGS }],\r\n                });\r\n              }}\r\n            >\r\n              Create Script Tag\r\n            </Button>\r\n          </Card>\r\n        </Layout.Section>\r\n        <Layout.Section>\r\n          <Card>\r\n            <ResourceList>\r\n              test\r\n            </ResourceList>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default ScriptPage;\r\n"]},"metadata":{},"sourceType":"module"}