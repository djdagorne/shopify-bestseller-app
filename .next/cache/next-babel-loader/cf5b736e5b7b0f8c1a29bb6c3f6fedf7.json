{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport store from 'store-js';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ProductList() {\n  /*  const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } });\r\n    if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error.message}</div>;\r\n    console.log(data); */\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Hello from ProductList\"));\n}\n\nexport default ProductList;","map":{"version":3,"sources":["Z:/Documents/Projects/sample-shopify-app/components/ProductList.js"],"names":["React","gql","useQuery","store","Card","ResourceList","Stack","TextStyle","Thumbnail","GET_PRODUCTS_BY_ID","ProductList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SACEC,IADF,EACQC,YADR,EACsBC,KADtB,EAC6BC,SAD7B,EACwCC,SADxC,QAEO,kBAFP;AAIA,MAAMC,kBAAkB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA6BA,SAASS,WAAT,GAAuB;AACrB;;;;AAOA,SACE,mBACE,2CADF,CADF;AAKD;;AAED,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport store from 'store-js';\r\nimport {\r\n  Card, ResourceList, Stack, TextStyle, Thumbnail,\r\n} from '@shopify/polaris';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        descriptionHtml\r\n        id\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ProductList() {\r\n  /*  const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } });\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error.message}</div>;\r\n\r\n  console.log(data); */\r\n\r\n  return (\r\n    <div>\r\n      <h1>Hello from ProductList</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"]},"metadata":{},"sourceType":"module"}