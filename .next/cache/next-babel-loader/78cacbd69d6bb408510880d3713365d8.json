{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/react-in-jsx-scope */\n\n/* eslint-disable react/jsx-filename-extension */\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nconst CREATE_SCRIPT_TAG = gql`\n  mutation scriptTagCreate($input: ScriptTagInput!) {\n    scriptTagCreate(input: $input) {\n      scriptTag {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst QUERY_SCRIPT_TAGS = gql`\n  query {\n    scriptTags(first: 5) {\n      edges {\n        node {\n          id\n          src\n          displayScope\n        }\n      }\n    }\n  }  \n`;\nconst DELETE_SCRIPT_TAG = gql`\n  mutation scriptTagDelete($id: ID!) {\n    scriptTagDelete(id: $id) {\n      deletedScriptTagId\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n\nfunction ScriptPage() {\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n  const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_SCRIPT_TAGS);\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(\"div\", null, __jsx(\"button\", {\n    type: \"submit\",\n    onClick: () => {\n      createScripts({\n        variables: {\n          input: {\n            src: process.env.DEV_URL,\n            displayScope: 'ALL'\n          }\n        },\n        refetchQueries: [{\n          query: QUERY_SCRIPT_TAGS\n        }]\n      });\n    }\n  }, \"create script tag\"), __jsx(\"h1\", null, \"Here are the script tags atm: \"), data.scriptTags.edges.map(item => __jsx(\"div\", {\n    key: item.node.id\n  }, __jsx(\"p\", null, item.node.id), __jsx(\"button\", {\n    type: \"submit\",\n    onClick: () => {\n      deleteScripts({\n        variables: {\n          id: item.node.id\n        },\n        refetchQueries: [{\n          query: QUERY_SCRIPT_TAGS\n        }]\n      });\n    }\n  }, \"Delete Script\"))));\n}\n\nexport default ScriptPage;","map":{"version":3,"sources":["Z:/Documents/Projects/sample-shopify-app/pages/script-page.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAGS","DELETE_SCRIPT_TAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message","variables","input","src","process","env","DEV_URL","displayScope","refetchQueries","query","scriptTags","edges","map","item","node","id"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AAEA,MAAMC,iBAAiB,GAAGH,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAMI,iBAAiB,GAAGJ,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAMK,iBAAiB,GAAGL,GAAI;;;;;;;;;;CAA9B;;AAYA,SAASM,UAAT,GAAsB;AACpB,QAAM,CAACC,aAAD,IAAkBL,WAAW,CAACC,iBAAD,CAAnC;AACA,QAAM,CAACK,aAAD,IAAkBN,WAAW,CAACG,iBAAD,CAAnC;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACG,iBAAD,CAAzC;AAEA,MAAIK,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEX,SACE,mBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,aAAa,CAAC;AACZM,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE;AACLC,YAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADZ;AAELC,YAAAA,YAAY,EAAE;AAFT;AADE,SADC;AAOZC,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEjB;AAAT,SAAD;AAPJ,OAAD,CAAb;AASD;AAZH,yBADF,EAiBE,mDAjBF,EAkBGO,IAAI,CAACW,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA2BC,IAAD,IACzB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,IAAL,CAAUC;AAApB,KACE,iBAAIF,IAAI,CAACC,IAAL,CAAUC,EAAd,CADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbnB,MAAAA,aAAa,CAAC;AACZK,QAAAA,SAAS,EAAE;AACTc,UAAAA,EAAE,EAAEF,IAAI,CAACC,IAAL,CAAUC;AADL,SADC;AAIZP,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEjB;AAAT,SAAD;AAJJ,OAAD,CAAb;AAMD;AATH,qBAFF,CADD,CAlBH,CADF;AAuCD;;AAED,eAAeE,UAAf","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst QUERY_SCRIPT_TAGS = gql`\r\n  query {\r\n    scriptTags(first: 5) {\r\n      edges {\r\n        node {\r\n          id\r\n          src\r\n          displayScope\r\n        }\r\n      }\r\n    }\r\n  }  \r\n`;\r\n\r\nconst DELETE_SCRIPT_TAG = gql`\r\n  mutation scriptTagDelete($id: ID!) {\r\n    scriptTagDelete(id: $id) {\r\n      deletedScriptTagId\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ScriptPage() {\r\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\r\n  const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\r\n  const { loading, error, data } = useQuery(QUERY_SCRIPT_TAGS);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error.message}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={() => {\r\n          createScripts({\r\n            variables: {\r\n              input: {\r\n                src: process.env.DEV_URL,\r\n                displayScope: 'ALL',\r\n              },\r\n            },\r\n            refetchQueries: [{ query: QUERY_SCRIPT_TAGS }],\r\n          });\r\n        }}\r\n      >\r\n        create script tag\r\n      </button>\r\n      <h1>Here are the script tags atm: </h1>\r\n      {data.scriptTags.edges.map((item) => (\r\n        <div key={item.node.id}>\r\n          <p>{item.node.id}</p>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              deleteScripts({\r\n                variables: {\r\n                  id: item.node.id,\r\n                },\r\n                refetchQueries: [{ query: QUERY_SCRIPT_TAGS }],\r\n              });\r\n            }}\r\n          >\r\n            Delete Script\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScriptPage;\r\n"]},"metadata":{},"sourceType":"module"}