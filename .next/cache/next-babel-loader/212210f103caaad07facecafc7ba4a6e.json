{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/react-in-jsx-scope */\n\n/* eslint-disable react/jsx-filename-extension */\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\nconst CREATE_SCRIPT_TAG = gql`\n  mutation scriptTagCreate($input: ScriptTagInput!) {\n    scriptTagCreate(input: $input) {\n      scriptTag {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst QUERY_SCRIPT_TAGS = gql`\n  query {\n    scriptTags(first: 5) {\n      edges {\n        node {\n          id\n          src\n          displayScope\n        }\n      }\n    }\n  }  \n`;\nconst DELETE_SCRIPT_TAG = gql`\n  mutation scriptTagDelete($id: ID!) {\n    scriptTagDelete(id: $id) {\n      deletedScriptTagId\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n\nfunction ScriptPage() {\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n  const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_SCRIPT_TAGS);\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, {\n    primary: true\n  }, __jsx(Card, {\n    title: \"These are current script tags: \",\n    sectioned: true\n  }, __jsx(\"p\", null, \" Create or Delete A Script Tag\"))), __jsx(Layout.Section, {\n    secondary: true\n  }, __jsx(Card, {\n    title: \"Delete Tag \",\n    sectioned: true\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: () => {\n      createScripts({\n        variables: {\n          input: {\n            src: 'https://adf7e9d013ed.ngrok.io/test-script.js',\n            displayScope: 'ALL'\n          }\n        },\n        refetchQueries: [{\n          query: QUERY_SCRIPT_TAGS\n        }]\n      });\n    }\n  }, \"Create Script Tag\"))), __jsx(Layout.Section, null, __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Script',\n      plural: 'Scripts'\n    }\n  }, \"test\")))));\n}\n\nexport default ScriptPage;","map":{"version":3,"sources":["Z:/Documents/Projects/sample-shopify-app/pages/script-page.js"],"names":["gql","useQuery","useMutation","Button","Card","Layout","Page","ResourceList","Stack","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAGS","DELETE_SCRIPT_TAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message","variables","input","src","displayScope","refetchQueries","query","singular","plural"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SACEC,MADF,EACUC,IADV,EACgBC,MADhB,EACwBC,IADxB,EAC8BC,YAD9B,EAC4CC,KAD5C,QAEO,kBAFP;AAIA,MAAMC,iBAAiB,GAAGT,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAMU,iBAAiB,GAAGV,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAMW,iBAAiB,GAAGX,GAAI;;;;;;;;;;CAA9B;;AAYA,SAASY,UAAT,GAAsB;AACpB,QAAM,CAACC,aAAD,IAAkBX,WAAW,CAACO,iBAAD,CAAnC;AACA,QAAM,CAACK,aAAD,IAAkBZ,WAAW,CAACS,iBAAD,CAAnC;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BhB,QAAQ,CAACS,iBAAD,CAAzC;AAEA,MAAIK,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEX,SACE,MAAC,IAAD,QACE,MAAC,MAAD,QACE,MAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,OAAO;AAAvB,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,iCAAZ;AAA8C,IAAA,SAAS;AAAvD,KACE,kDADF,CADF,CADF,EAME,MAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,SAAS;AAAzB,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,aAAZ;AAA0B,IAAA,SAAS;AAAnC,KACE,MAAC,MAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,aAAa,CAAC;AACZM,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE;AACLC,YAAAA,GAAG,EAAE,8CADA;AAELC,YAAAA,YAAY,EAAE;AAFT;AADE,SADC;AAOZC,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEd;AAAT,SAAD;AAPJ,OAAD,CAAb;AASD;AAdH,yBADF,CADF,CANF,EA4BE,MAAC,MAAD,CAAQ,OAAR,QACE,MAAC,IAAD,QACE,MAAC,YAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,YAAY,EAAE;AAAEe,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,MAAM,EAAE;AAA9B;AAFhB,YADF,CADF,CA5BF,CADF,CADF;AA2CD;;AAED,eAAed,UAAf","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  Button, Card, Layout, Page, ResourceList, Stack,\r\n} from '@shopify/polaris';\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst QUERY_SCRIPT_TAGS = gql`\r\n  query {\r\n    scriptTags(first: 5) {\r\n      edges {\r\n        node {\r\n          id\r\n          src\r\n          displayScope\r\n        }\r\n      }\r\n    }\r\n  }  \r\n`;\r\n\r\nconst DELETE_SCRIPT_TAG = gql`\r\n  mutation scriptTagDelete($id: ID!) {\r\n    scriptTagDelete(id: $id) {\r\n      deletedScriptTagId\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ScriptPage() {\r\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\r\n  const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\r\n  const { loading, error, data } = useQuery(QUERY_SCRIPT_TAGS);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error.message}</div>;\r\n\r\n  return (\r\n    <Page>\r\n      <Layout>\r\n        <Layout.Section primary>\r\n          <Card title=\"These are current script tags: \" sectioned>\r\n            <p> Create or Delete A Script Tag</p>\r\n          </Card>\r\n        </Layout.Section>\r\n        <Layout.Section secondary>\r\n          <Card title=\"Delete Tag \" sectioned>\r\n            <Button\r\n              primary\r\n              size=\"slim\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                createScripts({\r\n                  variables: {\r\n                    input: {\r\n                      src: 'https://adf7e9d013ed.ngrok.io/test-script.js',\r\n                      displayScope: 'ALL',\r\n                    },\r\n                  },\r\n                  refetchQueries: [{ query: QUERY_SCRIPT_TAGS }],\r\n                });\r\n              }}\r\n            >\r\n              Create Script Tag\r\n            </Button>\r\n          </Card>\r\n        </Layout.Section>\r\n        <Layout.Section>\r\n          <Card>\r\n            <ResourceList\r\n              showHeader\r\n              resourceName={{ singular: 'Script', plural: 'Scripts' }}\r\n            >\r\n              test\r\n            </ResourceList>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default ScriptPage;\r\n"]},"metadata":{},"sourceType":"module"}